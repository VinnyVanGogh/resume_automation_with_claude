[project]
name = "resume-automation"
version = "0.1.0-alpha.4"
description = "Python-based resume conversion pipeline that transforms Markdown-formatted resumes into multiple ATS-optimized formats"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    { name = "Resume Automation Team", email = "computerscience@vinny-van-gogh.com" },
]
keywords = [
    "resume",
    "ats",
    "markdown",
    "pdf",
    "docx",
    "html",
    "automation",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing :: Markup",
    "Topic :: Office/Business",
]
dependencies = [
    "mistune==3.0.2",
    "python-docx==1.1.0",
    "weasyprint==65.1",
    "pydyf==0.11.0",
    "jinja2==3.1.3",
    "pyyaml==6.0.1",
    "pydantic[email]>=2.11.7",
    "pytest>=8.0.0",
    "click>=8.0.0",
    "pytest-benchmark>=4.0.0",
    "memory-profiler>=0.60.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest==8.0.0",
    "pytest-cov==4.1.0",
    "mypy==1.8.0",
    "black==24.1.1",
    "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/VinnyVanGogh/resume_automation_with_claude"
Repository = "https://github.com/VinnyVanGogh/resume_automation_with_claude.git"
Issues = "https://github.com/VinnyVanGogh/resume_automation_with_claude/issues"

[project.scripts]
resume-convert = "src.cli:cli"

[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = [
    "src",
]

[tool.pytest.ini_options]
testpaths = [
    "tests",
    "src",
]
python_files = [
    "test_*.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=90",
    "-v",
]

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.black]
line-length = 88
target-version = [
    "py312",
]
include = "\\.pyi?$"
extend-exclude = "/(\n  # directories\n  \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | build\n  | dist\n)/\n"

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "B",
    "C4",
    "UP",
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",
]

[tool.coverage.run]
source = [
    "src",
]
omit = [
    "tests/*",
    "*/tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
